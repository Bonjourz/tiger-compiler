State 1 conflicts: 1 shift/reduce
State 18 conflicts: 1 shift/reduce
State 31 conflicts: 1 shift/reduce
State 34 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | NIL
    4    | INT
    5    | STRING
    6    | ID LPAREN paras RPAREN
    7    | MINUS exp
    8    | exp PLUS exp
    9    | exp MINUS exp
   10    | exp TIMES exp
   11    | exp DIVIDE exp
   12    | exp EQ exp
   13    | exp NEQ exp
   14    | exp LT exp
   15    | exp LE exp
   16    | exp GT exp
   17    | exp GE exp
   18    | exp AND exp
   19    | exp OR exp
   20    | ID LBRACE rec RBRACE
   21    | LPAREN expseq RPAREN
   22    | lvalue ASSIGN exp
   23    | IF exp THEN exp ELSE exp
   24    | IF exp THEN exp
   25    | WHILE exp DO exp
   26    | BREAK
   27    | FOR ID ASSIGN exp TO exp DO exp
   28    | LET decs IN expseq END
   29    | ID LBRACK exp RBRACK OF exp
   30    | LPAREN exp RPAREN

   31 rec: /* empty */
   32    | rec_nonempty

   33 rec_nonempty: rec_one COMMA rec_nonempty
   34             | rec_one

   35 rec_one: ID EQ exp

   36 lvalue: ID
   37       | lvalue DOT ID
   38       | lvalue LBRACK exp RBRACK
   39       | ID LBRACK exp RBRACK

   40 expseq_nonempty: exp
   41                | exp SEMICOLON expseq_nonempty

   42 expseq: /* empty */
   43       | expseq_nonempty

   44 paras_nonempty: exp COMMA paras_nonempty
   45               | exp

   46 paras: /* empty */
   47      | paras_nonempty

   48 decs: /* empty */
   49     | decs_nonempty

   50 decs_nonempty: decs_nonempty_s decs_nonempty
   51              | decs_nonempty_s

   52 decs_nonempty_s: tydec
   53                | vardec
   54                | fundec

   55 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   56           | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   57 fundec: fundec_one fundec
   58       | fundec_one

   59 vardec: VAR ID ASSIGN exp
   60       | VAR ID COLON ID ASSIGN exp

   61 tydec_one: TYPE ID EQ ty

   62 tydec: tydec_one tydec
   63      | tydec_one

   64 ty: ID
   65   | LBRACE tyfields RBRACE
   66   | ARRAY OF ID

   67 field: ID COLON ID

   68 tyfields: /* empty */
   69         | tyfields_nonempty

   70 tyfields_nonempty: field COMMA tyfields_nonempty
   71                  | field


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 6 20 27 29 35 36 37 39 55 56 59 60 61 64 66 67
STRING (259) 5
INT (260) 4
COMMA (261) 33 44 70
COLON (262) 56 60 67
SEMICOLON (263) 41
LPAREN (264) 6 21 30 55 56
RPAREN (265) 6 21 30 55 56
LBRACK (266) 29 38 39
RBRACK (267) 29 38 39
LBRACE (268) 20 65
RBRACE (269) 20 65
DOT (270) 37
PLUS (271) 8
MINUS (272) 7 9
UMINUS (273)
TIMES (274) 10
DIVIDE (275) 11
EQ (276) 12 35 55 56 61
NEQ (277) 13
LT (278) 14
LE (279) 15
GT (280) 16
GE (281) 17
AND (282) 18
OR (283) 19
ASSIGN (284) 22 27 59 60
ARRAY (285) 66
IF (286) 23 24
THEN (287) 23 24
ELSE (288) 23
WHILE (289) 25
FOR (290) 27
TO (291) 27
DO (292) 25 27
LET (293) 28
IN (294) 28
END (295) 28
OF (296) 29 66
BREAK (297) 26
NIL (298) 3
FUNCTION (299) 55 56
VAR (300) 59 60
TYPE (301) 61


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30, on right: 1 7 8 9 10 11 12 13 14 15 16
    17 18 19 22 23 24 25 27 29 30 35 38 39 40 41 44 45 55 56 59 60
rec (50)
    on left: 31 32, on right: 20
rec_nonempty (51)
    on left: 33 34, on right: 32 33
rec_one (52)
    on left: 35, on right: 33 34
lvalue (53)
    on left: 36 37 38 39, on right: 2 22 37 38
expseq_nonempty (54)
    on left: 40 41, on right: 41 43
expseq (55)
    on left: 42 43, on right: 21 28
paras_nonempty (56)
    on left: 44 45, on right: 44 47
paras (57)
    on left: 46 47, on right: 6
decs (58)
    on left: 48 49, on right: 28
decs_nonempty (59)
    on left: 50 51, on right: 49 50
decs_nonempty_s (60)
    on left: 52 53 54, on right: 50 51
fundec_one (61)
    on left: 55 56, on right: 57 58
fundec (62)
    on left: 57 58, on right: 54 57
vardec (63)
    on left: 59 60, on right: 53
tydec_one (64)
    on left: 61, on right: 62 63
tydec (65)
    on left: 62 63, on right: 52 62
ty (66)
    on left: 64 65 66, on right: 61
field (67)
    on left: 67, on right: 70 71
tyfields (68)
    on left: 68 69, on right: 55 56 65
tyfields_nonempty (69)
    on left: 70 71, on right: 69 70


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    exp      go to state 13
    lvalue   go to state 14


state 1

    6 exp: ID . LPAREN paras RPAREN
   20    | ID . LBRACE rec RBRACE
   29    | ID . LBRACK exp RBRACK OF exp
   36 lvalue: ID .
   39       | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 15
    LBRACK  shift, and go to state 16
    LBRACE  shift, and go to state 17

    LBRACK    [reduce using rule 36 (lvalue)]
    $default  reduce using rule 36 (lvalue)


state 2

    5 exp: STRING .

    $default  reduce using rule 5 (exp)


state 3

    4 exp: INT .

    $default  reduce using rule 4 (exp)


state 4

   21 exp: LPAREN . expseq RPAREN
   30    | LPAREN . exp RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 42 (expseq)

    exp              go to state 18
    lvalue           go to state 14
    expseq_nonempty  go to state 19
    expseq           go to state 20


state 5

    7 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 21
    lvalue  go to state 14


state 6

   23 exp: IF . exp THEN exp ELSE exp
   24    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 22
    lvalue  go to state 14


state 7

   25 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 23
    lvalue  go to state 14


state 8

   27 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 24


state 9

   28 exp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 25
    VAR       shift, and go to state 26
    TYPE      shift, and go to state 27

    $default  reduce using rule 48 (decs)

    decs             go to state 28
    decs_nonempty    go to state 29
    decs_nonempty_s  go to state 30
    fundec_one       go to state 31
    fundec           go to state 32
    vardec           go to state 33
    tydec_one        go to state 34
    tydec            go to state 35


state 10

   26 exp: BREAK .

    $default  reduce using rule 26 (exp)


state 11

    3 exp: NIL .

    $default  reduce using rule 3 (exp)


state 12

    0 $accept: program . $end

    $end  shift, and go to state 36


state 13

    1 program: exp .
    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 1 (program)


state 14

    2 exp: lvalue .
   22    | lvalue . ASSIGN exp
   37 lvalue: lvalue . DOT ID
   38       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 49
    DOT     shift, and go to state 50
    ASSIGN  shift, and go to state 51

    $default  reduce using rule 2 (exp)


state 15

    6 exp: ID LPAREN . paras RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 46 (paras)

    exp             go to state 52
    lvalue          go to state 14
    paras_nonempty  go to state 53
    paras           go to state 54


state 16

   29 exp: ID LBRACK . exp RBRACK OF exp
   39 lvalue: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 55
    lvalue  go to state 14


state 17

   20 exp: ID LBRACE . rec RBRACE

    ID  shift, and go to state 56

    $default  reduce using rule 31 (rec)

    rec           go to state 57
    rec_nonempty  go to state 58
    rec_one       go to state 59


state 18

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   30    | LPAREN exp . RPAREN
   40 expseq_nonempty: exp .
   41                | exp . SEMICOLON expseq_nonempty

    SEMICOLON  shift, and go to state 60
    RPAREN     shift, and go to state 61
    PLUS       shift, and go to state 37
    MINUS      shift, and go to state 38
    TIMES      shift, and go to state 39
    DIVIDE     shift, and go to state 40
    EQ         shift, and go to state 41
    NEQ        shift, and go to state 42
    LT         shift, and go to state 43
    LE         shift, and go to state 44
    GT         shift, and go to state 45
    GE         shift, and go to state 46
    AND        shift, and go to state 47
    OR         shift, and go to state 48

    RPAREN  [reduce using rule 40 (expseq_nonempty)]


state 19

   43 expseq: expseq_nonempty .

    $default  reduce using rule 43 (expseq)


state 20

   21 exp: LPAREN expseq . RPAREN

    RPAREN  shift, and go to state 62


state 21

    7 exp: MINUS exp .
    8    | exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp

    $default  reduce using rule 7 (exp)


state 22

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   23    | IF exp . THEN exp ELSE exp
   24    | IF exp . THEN exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48
    THEN    shift, and go to state 63


state 23

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   25    | WHILE exp . DO exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48
    DO      shift, and go to state 64


state 24

   27 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 65


state 25

   55 fundec_one: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   56           | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 66


state 26

   59 vardec: VAR . ID ASSIGN exp
   60       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 67


state 27

   61 tydec_one: TYPE . ID EQ ty

    ID  shift, and go to state 68


state 28

   28 exp: LET decs . IN expseq END

    IN  shift, and go to state 69


state 29

   49 decs: decs_nonempty .

    $default  reduce using rule 49 (decs)


state 30

   50 decs_nonempty: decs_nonempty_s . decs_nonempty
   51              | decs_nonempty_s .

    FUNCTION  shift, and go to state 25
    VAR       shift, and go to state 26
    TYPE      shift, and go to state 27

    $default  reduce using rule 51 (decs_nonempty)

    decs_nonempty    go to state 70
    decs_nonempty_s  go to state 30
    fundec_one       go to state 31
    fundec           go to state 32
    vardec           go to state 33
    tydec_one        go to state 34
    tydec            go to state 35


state 31

   57 fundec: fundec_one . fundec
   58       | fundec_one .

    FUNCTION  shift, and go to state 25

    FUNCTION  [reduce using rule 58 (fundec)]
    $default  reduce using rule 58 (fundec)

    fundec_one  go to state 31
    fundec      go to state 71


state 32

   54 decs_nonempty_s: fundec .

    $default  reduce using rule 54 (decs_nonempty_s)


state 33

   53 decs_nonempty_s: vardec .

    $default  reduce using rule 53 (decs_nonempty_s)


state 34

   62 tydec: tydec_one . tydec
   63      | tydec_one .

    TYPE  shift, and go to state 27

    TYPE      [reduce using rule 63 (tydec)]
    $default  reduce using rule 63 (tydec)

    tydec_one  go to state 34
    tydec      go to state 72


state 35

   52 decs_nonempty_s: tydec .

    $default  reduce using rule 52 (decs_nonempty_s)


state 36

    0 $accept: program $end .

    $default  accept


state 37

    8 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 73
    lvalue  go to state 14


state 38

    9 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 74
    lvalue  go to state 14


state 39

   10 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 75
    lvalue  go to state 14


state 40

   11 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 76
    lvalue  go to state 14


state 41

   12 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 77
    lvalue  go to state 14


state 42

   13 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 78
    lvalue  go to state 14


state 43

   14 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 79
    lvalue  go to state 14


state 44

   15 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 80
    lvalue  go to state 14


state 45

   16 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 81
    lvalue  go to state 14


state 46

   17 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 82
    lvalue  go to state 14


state 47

   18 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 83
    lvalue  go to state 14


state 48

   19 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 84
    lvalue  go to state 14


state 49

   38 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 85
    lvalue  go to state 14


state 50

   37 lvalue: lvalue DOT . ID

    ID  shift, and go to state 86


state 51

   22 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 87
    lvalue  go to state 14


state 52

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   44 paras_nonempty: exp . COMMA paras_nonempty
   45               | exp .

    COMMA   shift, and go to state 88
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 45 (paras_nonempty)


state 53

   47 paras: paras_nonempty .

    $default  reduce using rule 47 (paras)


state 54

    6 exp: ID LPAREN paras . RPAREN

    RPAREN  shift, and go to state 89


state 55

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   29    | ID LBRACK exp . RBRACK OF exp
   39 lvalue: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 90
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48


state 56

   35 rec_one: ID . EQ exp

    EQ  shift, and go to state 91


state 57

   20 exp: ID LBRACE rec . RBRACE

    RBRACE  shift, and go to state 92


state 58

   32 rec: rec_nonempty .

    $default  reduce using rule 32 (rec)


state 59

   33 rec_nonempty: rec_one . COMMA rec_nonempty
   34             | rec_one .

    COMMA  shift, and go to state 93

    $default  reduce using rule 34 (rec_nonempty)


state 60

   41 expseq_nonempty: exp SEMICOLON . expseq_nonempty

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 94
    lvalue           go to state 14
    expseq_nonempty  go to state 95


state 61

   30 exp: LPAREN exp RPAREN .

    $default  reduce using rule 30 (exp)


state 62

   21 exp: LPAREN expseq RPAREN .

    $default  reduce using rule 21 (exp)


state 63

   23 exp: IF exp THEN . exp ELSE exp
   24    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 96
    lvalue  go to state 14


state 64

   25 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 97
    lvalue  go to state 14


state 65

   27 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 98
    lvalue  go to state 14


state 66

   55 fundec_one: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   56           | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 99


state 67

   59 vardec: VAR ID . ASSIGN exp
   60       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 100
    ASSIGN  shift, and go to state 101


state 68

   61 tydec_one: TYPE ID . EQ ty

    EQ  shift, and go to state 102


state 69

   28 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 42 (expseq)

    exp              go to state 94
    lvalue           go to state 14
    expseq_nonempty  go to state 19
    expseq           go to state 103


state 70

   50 decs_nonempty: decs_nonempty_s decs_nonempty .

    $default  reduce using rule 50 (decs_nonempty)


state 71

   57 fundec: fundec_one fundec .

    $default  reduce using rule 57 (fundec)


state 72

   62 tydec: tydec_one tydec .

    $default  reduce using rule 62 (tydec)


state 73

    8 exp: exp . PLUS exp
    8    | exp PLUS exp .
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp

    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    $default  reduce using rule 8 (exp)


state 74

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
    9    | exp MINUS exp .
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp

    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    $default  reduce using rule 9 (exp)


state 75

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   10    | exp TIMES exp .
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp

    $default  reduce using rule 10 (exp)


state 76

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   11    | exp DIVIDE exp .
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp

    $default  reduce using rule 11 (exp)


state 77

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   12    | exp EQ exp .
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 12 (exp)


state 78

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   13    | exp NEQ exp .
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 13 (exp)


state 79

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   14    | exp LT exp .
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 14 (exp)


state 80

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   15    | exp LE exp .
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 15 (exp)


state 81

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   16    | exp GT exp .
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 16 (exp)


state 82

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   17    | exp GE exp .
   18    | exp . AND exp
   19    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 17 (exp)


state 83

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   18    | exp AND exp .
   19    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46

    $default  reduce using rule 18 (exp)


state 84

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   19    | exp OR exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46

    $default  reduce using rule 19 (exp)


state 85

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   38 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 104
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48


state 86

   37 lvalue: lvalue DOT ID .

    $default  reduce using rule 37 (lvalue)


state 87

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   22    | lvalue ASSIGN exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 22 (exp)


state 88

   44 paras_nonempty: exp COMMA . paras_nonempty

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 52
    lvalue          go to state 14
    paras_nonempty  go to state 105


state 89

    6 exp: ID LPAREN paras RPAREN .

    $default  reduce using rule 6 (exp)


state 90

   29 exp: ID LBRACK exp RBRACK . OF exp
   39 lvalue: ID LBRACK exp RBRACK .

    OF  shift, and go to state 106

    $default  reduce using rule 39 (lvalue)


state 91

   35 rec_one: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 107
    lvalue  go to state 14


state 92

   20 exp: ID LBRACE rec RBRACE .

    $default  reduce using rule 20 (exp)


state 93

   33 rec_nonempty: rec_one COMMA . rec_nonempty

    ID  shift, and go to state 56

    rec_nonempty  go to state 108
    rec_one       go to state 59


state 94

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   40 expseq_nonempty: exp .
   41                | exp . SEMICOLON expseq_nonempty

    SEMICOLON  shift, and go to state 60
    PLUS       shift, and go to state 37
    MINUS      shift, and go to state 38
    TIMES      shift, and go to state 39
    DIVIDE     shift, and go to state 40
    EQ         shift, and go to state 41
    NEQ        shift, and go to state 42
    LT         shift, and go to state 43
    LE         shift, and go to state 44
    GT         shift, and go to state 45
    GE         shift, and go to state 46
    AND        shift, and go to state 47
    OR         shift, and go to state 48

    $default  reduce using rule 40 (expseq_nonempty)


state 95

   41 expseq_nonempty: exp SEMICOLON expseq_nonempty .

    $default  reduce using rule 41 (expseq_nonempty)


state 96

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   23    | IF exp THEN exp . ELSE exp
   24    | IF exp THEN exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48
    ELSE    shift, and go to state 109

    $default  reduce using rule 24 (exp)


state 97

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   25    | WHILE exp DO exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 25 (exp)


state 98

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   27    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48
    TO      shift, and go to state 110


state 99

   55 fundec_one: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   56           | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 111

    $default  reduce using rule 68 (tyfields)

    field              go to state 112
    tyfields           go to state 113
    tyfields_nonempty  go to state 114


state 100

   60 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 115


state 101

   59 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 116
    lvalue  go to state 14


state 102

   61 tydec_one: TYPE ID EQ . ty

    ID      shift, and go to state 117
    LBRACE  shift, and go to state 118
    ARRAY   shift, and go to state 119

    ty  go to state 120


state 103

   28 exp: LET decs IN expseq . END

    END  shift, and go to state 121


state 104

   38 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 38 (lvalue)


state 105

   44 paras_nonempty: exp COMMA paras_nonempty .

    $default  reduce using rule 44 (paras_nonempty)


state 106

   29 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 122
    lvalue  go to state 14


state 107

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   35 rec_one: ID EQ exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 35 (rec_one)


state 108

   33 rec_nonempty: rec_one COMMA rec_nonempty .

    $default  reduce using rule 33 (rec_nonempty)


state 109

   23 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 123
    lvalue  go to state 14


state 110

   27 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 124
    lvalue  go to state 14


state 111

   67 field: ID . COLON ID

    COLON  shift, and go to state 125


state 112

   70 tyfields_nonempty: field . COMMA tyfields_nonempty
   71                  | field .

    COMMA  shift, and go to state 126

    $default  reduce using rule 71 (tyfields_nonempty)


state 113

   55 fundec_one: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   56           | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 127


state 114

   69 tyfields: tyfields_nonempty .

    $default  reduce using rule 69 (tyfields)


state 115

   60 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 128


state 116

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   59 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 59 (vardec)


state 117

   64 ty: ID .

    $default  reduce using rule 64 (ty)


state 118

   65 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 111

    $default  reduce using rule 68 (tyfields)

    field              go to state 112
    tyfields           go to state 129
    tyfields_nonempty  go to state 114


state 119

   66 ty: ARRAY . OF ID

    OF  shift, and go to state 130


state 120

   61 tydec_one: TYPE ID EQ ty .

    $default  reduce using rule 61 (tydec_one)


state 121

   28 exp: LET decs IN expseq END .

    $default  reduce using rule 28 (exp)


state 122

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   29    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 29 (exp)


state 123

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   23    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 23 (exp)


state 124

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   27    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48
    DO      shift, and go to state 131


state 125

   67 field: ID COLON . ID

    ID  shift, and go to state 132


state 126

   70 tyfields_nonempty: field COMMA . tyfields_nonempty

    ID  shift, and go to state 111

    field              go to state 112
    tyfields_nonempty  go to state 133


state 127

   55 fundec_one: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   56           | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 134
    EQ     shift, and go to state 135


state 128

   60 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 136
    lvalue  go to state 14


state 129

   65 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 137


state 130

   66 ty: ARRAY OF . ID

    ID  shift, and go to state 138


state 131

   27 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 139
    lvalue  go to state 14


state 132

   67 field: ID COLON ID .

    $default  reduce using rule 67 (field)


state 133

   70 tyfields_nonempty: field COMMA tyfields_nonempty .

    $default  reduce using rule 70 (tyfields_nonempty)


state 134

   56 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 140


state 135

   55 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 141
    lvalue  go to state 14


state 136

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   60 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 60 (vardec)


state 137

   65 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 65 (ty)


state 138

   66 ty: ARRAY OF ID .

    $default  reduce using rule 66 (ty)


state 139

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   27    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 27 (exp)


state 140

   56 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 142


state 141

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   55 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 55 (fundec_one)


state 142

   56 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 143
    lvalue  go to state 14


state 143

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   56 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 56 (fundec_one)
